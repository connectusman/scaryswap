{"version":3,"sources":["views/Ifos/components/Hero.tsx","firebase.ts","views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardTokens.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/GetLpModal.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeModal.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/ContributeButton.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardActions.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/Skeletons.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/IfoCardDetails.tsx","views/Ifos/components/IfoFoldableCard/IfoPoolCard/index.tsx","views/Ifos/components/IfoFoldableCard/Timer.tsx","views/Ifos/components/IfoFoldableCard/Achievement.tsx","views/Ifos/components/IfoFoldableCard/index.tsx","views/Ifos/components/IfoLayout.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/index.tsx"],"names":["StyledHero","styled","div","theme","isDark","CurtainBottom","Hero","t","useTranslation","mb","Container","as","scale","bold","fontSize","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","getStorage","getFirestore","TokenSection","primaryToken","children","props","alt","width","style","objectFit","src","Label","color","textTransform","Value","wordBreak","IfoCardTokens","publicIfoData","account","useWeb3React","useTooltip","placement","tooltip","targetRef","tooltipVisible","ifocontract","useIfoV3Contract","myaddress","useState","bnbcommited","setbnbcommited","tokenRecieved","settokenRecieved","useEffect","a","getFullDisplayBalance","bnbCommitted","toString","bnbBal","pendingTokens","BigNumber","decimals","toNumber","tokenBal","loadData","pb","status","concat","tokens","wbnb","address","logolink","symbol","GetLpModal","currency","onDismiss","title","maxWidth","multiplierValues","gasPrice","BIG_TEN","times","pow","BIG_NINE","ContributeModal","onSuccess","value","setValue","userCurrencyBalance","useGetBnbBalance","balance","useToast","toastError","toastSuccess","console","log","contract","DEFAULT_TOKEN_DECIMAL","isDisable","setIsDisable","onUserInput","e","Number","getDecimalAmount","costPresale","textAlign","justifyContent","map","multiplierValue","index","variant","onClick","mr","length","disabled","buyPresale","tx","wait","ContributeButton","maxUserAmount","iswhite","setIswhite","ctime","Date","getTime","toFixed","countdownToUse","startPresaleTime","endPresaleTime","isWhitelistOn","isInList","handleContributeSuccess","amount","useModal","onPresentContributeModal","onPresentGetLpModal","isEqualTo","IfoCardActions","ConnectWalletButton","SkeletonCardDetails","FooterEntry","label","alignItems","small","height","IfoCardDetails","bnbraise","setBnbraise","tokensold","setTokensold","simpleRpcProvider","getBalance","data","paddingTop","SmallCard","PoolIds","poolBasic","poolUnlimited","round","Timer","timeUntil","getTimePeriods","suffix","animation","day","days","hour","hours","minute","minutes","Flex","mediaQueries","md","AchievementFlex","isFinished","StyledLinkExternal","LinkExternal","Achievement","flexGrow","flexDirection","name","users","listingPrice","href","link","softcap","hardcap","ILOToken","StyledCard","Card","Header","CardHeader","FoldableContent","isActive","colors","gradients","bubblegum","dropdown","CardsWrapper","singleCard","StyledCardBody","CardBody","IfoFoldableCard","CardFooter","backgroundAlt","Ribbon","variantColor","ribbonPosition","text","getRibbonComponent","ribbon","headerlogo","primaryStep","sold","IfoPoolCard","IfoLayout","textSubtle","Ifo","ifosConfig","find","ifo","setloadedAddr","setpublicIfoData","docRef","doc","getDoc","docCurSet","docRefData","docCurSetData","getIfoV3Contract","call","paused","tokenName","tokenSymbol","projectLink","headerlink","Ifos","useRouteMatch","path","url","isExact","exact","CurrentIfo"],"mappings":"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","file":"static/js/23.86dc7f1a.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Heading, Text } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport { useTranslation } from 'contexts/Localization'\n\nconst getGradient = (isDark: boolean) => {\n  if (isDark) {\n    return 'repeating-linear-gradient(to right, #332453, #332453 40px, #281D44 40px, #281D44 80px)'\n  }\n\n  return 'repeating-linear-gradient(to right, #21d4e2, #21d4e2 40px, #53dee9 40px, #53dee9 80px)'\n}\n\nconst StyledHero = styled.div`\n  background: ${({ theme }) => getGradient(theme.isDark)};\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst CurtainBottom = styled.div`\n  background-image: url('/images/curtain-bottom-${({ theme }) => (theme.isDark ? 'dark' : 'light')}.png');\n  background-repeat: repeat-x;\n  background-size: contain;\n  height: 20px;\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Box mb=\"32px\">\n      <StyledHero>\n        <Container>\n          <Heading as=\"h1\" scale=\"xl\" mb=\"24px\">\n            {t('LaunchPad: Initial Listing Offerings')}\n          </Heading>\n          <Text bold fontSize=\"20px\">\n            {t('Buy new tokens with a brand new token sale model.')}\n          </Text>\n        </Container>\n      </StyledHero>\n      <CurtainBottom />\n    </Box>\n  )\n}\n\nexport default Hero\n","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\nimport {getFirestore} from \"firebase/firestore\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC28pCUpr_an_OI4U_Hdc1D4fb-IPSf48U\",\r\n  authDomain: \"scaryswap.firebaseapp.com\",\r\n  projectId: \"scaryswap\",\r\n  storageBucket: \"scaryswap.appspot.com\",\r\n  messagingSenderId: \"1050490810277\",\r\n  appId: \"1:1050490810277:web:e55c881409254dc711824c\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst storage = getStorage(app);\r\nconst firestore = getFirestore(app);\r\n\r\nexport { storage,firestore, app };","import React, { useEffect, useState } from 'react'\nimport {\n  Text,\n  Flex,\n  Box,\n  CheckmarkCircleIcon,\n  FlexProps,\n  HelpIcon,\n  useTooltip,\n  Button,\n  AutoRenewIcon,\n  BunnyPlaceholderIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Ifo, PoolIds, Token } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { PublicIfoData3, WalletIfoData } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useERC20, useIfoV3Contract } from 'hooks/useContract'\nimport BigNumber from 'bignumber.js'\n\ninterface TokenSectionProps extends FlexProps {\n  primaryToken?: string\n}\n\nconst TokenSection: React.FC<TokenSectionProps> = ({ primaryToken, children, ...props }) => {\n  const renderTokenComponent = () => {\n  \n      return <img alt='icon' width={32} style={{objectFit:\"contain\"}} src={primaryToken} />\n    \n\n  \n\n    return null\n  }\n\n  return (\n    <Flex {...props}>\n      {renderTokenComponent()}\n      <div>{children}</div>\n    </Flex>\n  )\n}\n\n\nconst Label = (props) => <Text bold fontSize=\"12px\" color=\"secondary\" textTransform=\"uppercase\" {...props} />\n\nconst Value = (props) => <Text bold fontSize=\"20px\" style={{ wordBreak: 'break-all' }} {...props} />\n\ninterface IfoCardTokensProps {\n  publicIfoData: PublicIfoData3\n}\n\nconst IfoCardTokens: React.FC<IfoCardTokensProps> = ({\n  publicIfoData,\n}) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\n      'Sorry,  You didn\\'t buy anything in this sale.',\n    ),\n    { placement: 'bottom' },\n  )\n\n  const ifocontract=useIfoV3Contract(publicIfoData.myaddress);\n  const [bnbcommited, setbnbcommited] = useState(\"0\");\n      const [tokenRecieved, settokenRecieved] = useState(\"0\")\n  useEffect(()=>{\n    async function loadData() {\n      \n      const bnbBal=getFullDisplayBalance( (await ifocontract.bnbCommitted(account)).toString(),18,2)\n     \n      setbnbcommited(bnbBal)\n      const tokenBal=getFullDisplayBalance( (await ifocontract.pendingTokens(account)).toString(),new BigNumber(publicIfoData.decimals.toString()).toNumber(),0)\n      settokenRecieved(tokenBal)\n    }\n    if(account)\n    loadData();\n  },[account,ifocontract,publicIfoData]);\n  const renderTokenSection = () => {\n    \n    if (publicIfoData.status !==-1) {\n      return (\n        <>\n          <TokenSection primaryToken={'/images/tokens/'.concat(tokens.wbnb.address[56]).concat('.svg')}>\n            <Label>&nbsp;&nbsp;&nbsp;&nbsp;{t('Your BNB committed')}</Label>\n            <Value>&nbsp;&nbsp;&nbsp;&nbsp;{bnbcommited}</Value>\n          </TokenSection>\n          <br/>\n        \n          <TokenSection primaryToken={publicIfoData.logolink}>\n            <Label>&nbsp;&nbsp;&nbsp;&nbsp;{publicIfoData.symbol.concat(' Recieved')}</Label>\n            <Value>&nbsp;&nbsp;&nbsp;&nbsp;{tokenRecieved}</Value>\n          </TokenSection>\n          \n           \n        </>\n      )\n    }\n    \n    return null\n  }\n  return (\n    <Box pb=\"24px\">\n      {tooltipVisible && tooltip}\n      {renderTokenSection()}\n    </Box>\n  )\n}\n\nexport default IfoCardTokens\n","import React from 'react'\nimport { Modal, ModalBody, Text, Image, Button, Link, OpenNewIcon } from '@pancakeswap/uikit'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface Props {\n  currency: Token\n  onDismiss?: () => void\n}\n\nconst GetLpModal: React.FC<Partial<Props>> = ({ currency, onDismiss }) => {\n  const { t } = useTranslation()\n  return (\n    <Modal title={t('BNB required')} onDismiss={onDismiss}>\n      <ModalBody maxWidth=\"288px\">\n       \n        <Text mb=\"16px\">{t('You\\'ll need BNB to participate in the IFO!')}</Text>\n        \n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default GetLpModal\n","import React, { useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { Modal, ModalBody, Text, Image, Button, BalanceInput, Flex } from '@pancakeswap/uikit'\nimport { PoolIds, Ifo } from 'config/constants/types'\nimport { WalletIfoData, PublicIfoData3 } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceAmount, getDecimalAmount, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport ApproveConfirmButtons from 'views/Profile/components/ApproveConfirmButtons'\nimport useApproveConfirmTransaction from 'hooks/useApproveConfirmTransaction'\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { useERC20, useIfoV3Contract } from 'hooks/useContract'\nimport { BIG_NINE, BIG_TEN } from 'utils/bigNumber'\nimport tokens from 'config/constants/tokens'\nimport { getContract } from 'utils'\nimport { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useToast from 'hooks/useToast'\n\ninterface Props {\n  publicIfoData: PublicIfoData3\n  onSuccess: (amount: BigNumber) => void\n  onDismiss?: () => void\n}\n\nconst multiplierValues = [0.1, 0.25, 0.5, 0.75, 1]\n\n// Default value for transaction setting, tweak based on BSC network congestion.\nconst gasPrice = BIG_TEN.times(BIG_TEN.pow(BIG_NINE)).toString()\n\nconst ContributeModal: React.FC<Props> = ({\n  publicIfoData,\n  onDismiss,\n  onSuccess,\n}) => {\n\n  const [value, setValue] = useState('')\n  const { account } = useWeb3React()\n  const { balance: userCurrencyBalance } = useGetBnbBalance()\n  const { toastError, toastSuccess } = useToast()\n  console.log(userCurrencyBalance)\n  const contract=useIfoV3Contract(publicIfoData.myaddress);\n  const { t } = useTranslation()\n  const valueWithTokenDecimals = new BigNumber(value).times(DEFAULT_TOKEN_DECIMAL)\n  const [isDisable, setIsDisable] = useState(false)\n \n \n\n  return (\n    <Modal title={t('', { })} onDismiss={onDismiss}>\n      <ModalBody maxWidth=\"350px\">\n        \n        \n        <BalanceInput\n          value={value}\n          onUserInput={e=>{\n            setValue(e);\n            setIsDisable(Number(getDecimalAmount(new BigNumber(e),18))<Number(publicIfoData.costPresale));\n            \n          }}\n          mb=\"8px\"\n        />\n        <Text color=\"textSubtle\" textAlign=\"right\" fontSize=\"12px\" mb=\"16px\">\n          {t('Balance: ')+getFullDisplayBalance(userCurrencyBalance, 18, 6)}\n        </Text>\n        <Flex justifyContent=\"space-between\" mb=\"16px\">\n          {multiplierValues.map((multiplierValue, index) => (\n            <Button\n              key={multiplierValue}\n              scale=\"xs\"\n              variant=\"tertiary\"\n              onClick={() => setValue((Number(getFullDisplayBalance(userCurrencyBalance, 18, 6))*multiplierValue).toString())}\n              mr={index < multiplierValues.length - 1 ? '8px' : 0}\n            >\n              {multiplierValue * 100}%\n            </Button>\n          ))}\n        </Flex>\n        <Text color=\"textSubtle\" fontSize=\"12px\" mb=\"24px\">\n          {t(\n            'If you don\\'t commit enough BNB, you may not receive any ILO tokens at all and will only receive a full refund of your BNB.',\n          )}\n        </Text>\n        <Button\n          disabled={isDisable}\n          onClick={async ()=>{\n            try {\n              const tx = await contract.buyPresale({gasPrice,value:getDecimalAmount(new BigNumber(value)).toString()});\n              const receipt = await tx.wait()\n              if (receipt.status) {\n                toastSuccess(t('Token Recieved'), t('Token has been sent to your wallet.'))\n                \n                onDismiss()\n              }\n            } catch (error) {\n              toastError(t('Error'), t('You are not allowed to buy.'))\n            \n            }\n          }}\n        >Buy</Button>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { WalletIfoData, PublicIfoData3 } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useTokenBalance, { useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport useToast from 'hooks/useToast'\nimport {Address} from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\nimport { useIfoV3Contract } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport GetLpModal from './GetLpModal'\nimport ContributeModal from './ContributeModal'\n\n\ninterface Props {\n  publicIfoData: PublicIfoData3\n}\nconst ContributeButton: React.FC<Props> = ({ publicIfoData }) => {\n  const limitPerUserInLP  = publicIfoData.maxUserAmount\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const { balance: userCurrencyBalance } = useGetBnbBalance()\n  const { account } = useWeb3React()\n  const contract=useIfoV3Contract(publicIfoData.myaddress);\n  const [iswhite, setIswhite] = useState(false);\n  const ctime= Number((new Date().getTime()/1000).toFixed(0));\n  const countdownToUse = ctime<Number(publicIfoData.startPresaleTime) ? Number(publicIfoData.startPresaleTime)-ctime :  ctime<Number(publicIfoData.endPresaleTime)?Number(publicIfoData.endPresaleTime)-ctime:0\n      \n  useEffect(()=>{\n    async function loadData() {\n      \n      console.log(publicIfoData.isWhitelistOn)\n      if(publicIfoData.isWhitelistOn)\n      {\n        console.log(\"asdasd\")\n        const tx = await contract.isInList(account);\n        if(tx.toString()===\"true\")\n          setIswhite(true);\n      }\n          \n      \n    }\n    if(account)\n    loadData();\n  },[account,contract,publicIfoData]);\n\n  // Refetch all the data, and display a message when fetching is done\n  const handleContributeSuccess = async (amount: BigNumber) => {\n  \n    toastSuccess(\n      t('Success!'),\n      t('You have contributed to this IFO!'),\n    )\n  }\n\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal\n      publicIfoData={publicIfoData}\n      onSuccess={handleContributeSuccess}\n    />,\n    false,\n  )\n\n  const [onPresentGetLpModal] = useModal(<GetLpModal currency={tokens.wbnb} />, false)\n\nif((ctime>Number(publicIfoData.startPresaleTime)&&countdownToUse>0)&&(!publicIfoData.isWhitelistOn[0]||iswhite))\n  {\n    return (\n    <Button\n      onClick={userCurrencyBalance.isEqualTo(0) ? onPresentGetLpModal : onPresentContributeModal}\n      width=\"100%\"\n    >Buy Presale\n    </Button>\n  )\n  }\n  console.log(\"asda\",ctime-Number(publicIfoData.startPresaleTime),countdownToUse)\n  if(!(ctime>Number(publicIfoData.startPresaleTime)&&countdownToUse>0))\n  {return (\n    <div style={{textAlign:\"center\"}}>Coming soon</div>\n  )\n  }\n  \n  return (\n    <div style={{textAlign:\"center\"}}>Sorry you are not whitelisted.</div>\n  )\n}\n\nexport default ContributeButton\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Button } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link } from 'react-router-dom'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { PublicIfoData3 } from 'views/Ifos/types'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport ContributeButton from './ContributeButton'\nimport ClaimButton from './ClaimButton'\nimport { SkeletonCardActions } from './Skeletons'\n\ninterface Props {\n  publicIfoData: PublicIfoData3\n}\n\nconst IfoCardActions: React.FC<Props> = ({  publicIfoData}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <ConnectWalletButton width=\"100%\" />\n  }\n\n  \n\n  return (\n    <>\n      {publicIfoData.status !==-1  && (\n        <ContributeButton publicIfoData={publicIfoData} />\n      )}\n    {/* sell button */}\n    </>\n  )\n}\n\nexport default IfoCardActions\n","import React from 'react'\nimport { Flex, Skeleton } from '@pancakeswap/uikit'\n\nexport const SkeletonCardActions = () => {\n  return <Skeleton height=\"48px\" />\n}\n\nexport const SkeletonCardTokens = () => {\n  return (\n    <div>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Skeleton variant=\"circle\" width=\"32px\" height=\"32px\" mr=\"16px\" />\n        <Skeleton width=\"90%\" />\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Skeleton variant=\"circle\" width=\"32px\" height=\"32px\" mr=\"16px\" />\n        <Skeleton width=\"90%\" />\n      </Flex>\n    </div>\n  )\n}\n\nexport const SkeletonCardDetails = () => {\n  return (\n    <div>\n      <Skeleton mb=\"8px\" />\n      <Skeleton />\n    </div>\n  )\n}\n\nexport default null\n","import React, { useEffect, useState } from 'react'\nimport { Text, Flex, Box, Skeleton } from '@pancakeswap/uikit'\nimport { PublicIfoData3 } from 'views/Ifos/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { getBalanceNumber, formatNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\nimport { useIfoV3Contract } from 'hooks/useContract'\n\nimport { simpleRpcProvider } from 'utils/providers'\nimport { SkeletonCardDetails } from './Skeletons'\n\n\nexport interface IfoCardDetailsProps {\n  \n  publicIfoData: PublicIfoData3\n}\n\nexport interface FooterEntryProps {\n  label: string\n  value: string | number\n}\n\nconst FooterEntry: React.FC<FooterEntryProps> = ({ label, value }) => {\n  \n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Text small color=\"textSubtle\">\n        {label}\n      </Text>\n      {value ? (\n        <Text small textAlign=\"right\">\n          {value}\n        </Text>\n      ) : (\n        <Skeleton height={21} width={80} />\n      )}\n    </Flex>\n  )\n}\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({  publicIfoData }) => {\n  const { t } = useTranslation()\n  const status  = Number(publicIfoData.status)\n  const [bnbraise, setBnbraise] = useState(\"0\");\n  const [tokensold, setTokensold] = useState(\"0\");\n  useEffect(()=>{\n    async function loadData() {\n      const data=await simpleRpcProvider.getBalance(publicIfoData.myaddress)\n      setBnbraise(getFullDisplayBalance(new BigNumber(data.toString()), 18, 2))\n      const tokens=new BigNumber(data.toString()).div(new BigNumber(publicIfoData.costPresale.toString()));\n      setTokensold(tokens.toFixed(0));\n    }\n      loadData();\n  },[publicIfoData]);\n  \n   \n    \n  \nif(status!==-2)\n  {console.log(publicIfoData.maxUserAmount.toString())\n    return <Box paddingTop=\"24px\">\n    <FooterEntry label={t('Max BNB entry:')} value={publicIfoData.maxUserAmount.toString()!==\"0\"?publicIfoData.maxUserAmount/1000000000000000000:\"No Limit\"} />\n  <FooterEntry label={t('BNB raised:')} value={bnbraise} />\n  <FooterEntry label={t('Token sold:')} value={tokensold} />\n  <FooterEntry label={t('Price Per BNB:')} value={(1000000000000000000/publicIfoData.costPresale).toFixed(0).toString().concat(\" \").concat(publicIfoData.symbol.toString())} />\n  </Box>\n  }\n  return <Box paddingTop=\"24px\">\n  <SkeletonCardDetails />\n  </Box>\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Card, CardBody, CardHeader, Text, useTooltip, HelpIcon, Flex } from '@pancakeswap/uikit'\nimport { Ifo, PoolIds } from 'config/constants/types'\nimport { useProfile } from 'state/profile/hooks'\nimport { PublicIfoData3 } from 'views/Ifos/types'\nimport { EnableStatus } from '../types'\nimport IfoCardTokens from './IfoCardTokens'\nimport IfoCardActions from './IfoCardActions'\nimport IfoCardDetails from './IfoCardDetails'\n\ninterface IfoCardProps {\n\n  publicIfoData: PublicIfoData3\n\n}\n\ninterface CardConfig {\n  [key: string]: {\n    title: string\n    variant: 'blue' | 'violet'\n    tooltip: string\n  }\n}\n\nconst cardConfig: CardConfig = {\n  [PoolIds.poolBasic]: {\n    title: 'Basic Sale',\n    variant: 'blue',\n    tooltip: 'Every person can only commit a limited amount, but may expect a higher return per token committed.',\n  },\n  [PoolIds.poolUnlimited]: {\n    title: 'Unlimited Sale',\n    variant: 'violet',\n    tooltip: 'No limits on the amount you can commit. Additional fee applies when claiming.',\n  },\n}\n\nconst SmallCard: React.FC<IfoCardProps> = ({ publicIfoData }) => {\n  const { t } = useTranslation()\n  \n\n  return (\n    <>\n    \n      <Card>\n      \n        <CardHeader variant='violet'>\n        \n          <Flex justifyContent=\"space-between\" alignItems=\"center\">\n            <Text bold fontSize=\"20px\">\n              {publicIfoData.round.toString()===\"1\"?\"Round 1\":publicIfoData.round.toString()===\"2\"?\"Round 2\":publicIfoData.round.toString()===\"3\"?\"Final Round\":\"\"}\n            </Text>\n            \n          </Flex>\n        </CardHeader>\n        <CardBody>\n          <IfoCardTokens\n            publicIfoData={publicIfoData}\n          />\n          <IfoCardActions\n            publicIfoData={publicIfoData}\n          />\n          <IfoCardDetails  publicIfoData={publicIfoData} />\n        </CardBody>\n      </Card>\n    </   >\n  )\n}\n\nexport default SmallCard\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport { Flex, Link, PocketWatchIcon, Text, Skeleton } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { PublicIfoData3 } from 'views/Ifos/types'\n\ninterface Props {\n  publicIfoData: PublicIfoData3\n}\n\nconst Timer: React.FC<Props> = ({ publicIfoData }) => {\n  const { t } = useTranslation()\n  const ctime= Number((new Date().getTime()/1000).toFixed(0));\n  console.log(ctime)\n  const countdownToUse = ctime<Number(publicIfoData.startPresaleTime) ? Number(publicIfoData.startPresaleTime)-ctime :  ctime<Number(publicIfoData.endPresaleTime)?Number(publicIfoData.endPresaleTime)-ctime:0\n  console.log(countdownToUse, Number(publicIfoData.startPresaleTime),ctime,Number(publicIfoData.endPresaleTime))\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = ctime<Number(publicIfoData.startPresaleTime) ? t('Start') : countdownToUse!==0 ? t('Finish'):\"Finised\"\n  return (\n    <Flex justifyContent=\"center\" mb=\"32px\">\n      {publicIfoData.status ===-1 ? (\n        <Skeleton animation=\"pulse\" variant=\"rect\" width=\"100%\" height=\"48px\" />\n      ) : (\n        <>\n          <PocketWatchIcon width=\"48px\" mr=\"16px\" />\n          <Flex alignItems=\"center\">\n            <Text bold mr=\"16px\">        \n              {suffix}:\n            </Text>\n            <Text>\n              {t('%day%d %hour%h %minute%m', {\n                day: timeUntil.days,\n                hour: timeUntil.hours,\n                minute: timeUntil.minutes,\n              })}\n            </Text>\n           \n          </Flex>\n        </>\n      )}\n    </Flex>\n  )\n}\n\nexport default Timer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, LinkExternal, Image, Text, PrizeIcon, Skeleton, WalletIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PublicIfoData3 } from 'views/Ifos/types'\nimport { Ifo } from 'config/constants/types'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { getBscScanLink } from 'utils'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport BigNumber from 'bignumber.js'\n\nconst MIN_DOLLAR_FOR_ACHIEVEMENT = BIG_TEN\n\ninterface Props {\n  publicIfoData: PublicIfoData3\n}\n\nconst Container = styled(Flex)`\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n    align-items: initial;\n  }\n`\n\nconst AchievementFlex = styled(Flex)<{ isFinished: boolean }>`\n  ${({ isFinished }) => (isFinished ? 'filter: grayscale(100%)' : '')};\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  margin-top: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-top: 0;\n  }\n`\n\nconst Achievement: React.FC<Props> = ({ publicIfoData }) => {\n  const { t } = useTranslation()\n\n\n  return (\n    <Container>\n      <AchievementFlex isFinished={publicIfoData.status === 0} alignItems=\"center\" flexGrow={1}>\n        <Flex flexDirection=\"column\">\n          <Flex>\n            <Text bold mr=\"8px\">\n              {t('LaunchPad: %title%', { title: publicIfoData.name })}\n            </Text>\n            <Flex alignItems=\"center\" mr=\"8px\">\n              <WalletIcon color=\"textSubtle\" width=\"16px\" mr=\"4px\" />\n              <Text color=\"textSubtle\">{5+Number(publicIfoData.users)} &nbsp;</Text>\n              <Text color=\"textSubtle\">{\" Participants\"}</Text>\n            </Flex>\n          </Flex>\n          <Flex>\n            <Text bold mr=\"8px\">\n              {t('Listing Price:')}\n            </Text>\n            <Flex alignItems=\"center\" mr=\"8px\">\n              <Text color=\"textSubtle\">1 BNB =  &nbsp;</Text>\n              <Text color=\"textSubtle\">{(1000000000000000000/publicIfoData.listingPrice).toFixed(0)}&nbsp;{publicIfoData.symbol}</Text>\n            </Flex>\n          </Flex>\n          <StyledLinkExternal href={publicIfoData.link} mb=\"8px\">\n          {t('Learn more about %title%', { title: publicIfoData.name })}\n        </StyledLinkExternal>\n        </Flex>\n      </AchievementFlex>\n      <Flex alignItems=\"flex-end\" flexDirection=\"column\">\n      <Flex>\n            <Text bold mr=\"8px\">\n              {t('Soft Cap: ')}\n            </Text>\n            <Flex alignItems=\"center\" mr=\"8px\">\n              <Text color=\"textSubtle\">{Number(publicIfoData.softcap)/1000000000000000000}&nbsp;BNB</Text>\n           </Flex>\n          </Flex>\n          <Flex>\n            <Text bold mr=\"8px\">\n              {t('Hard Cap: ')}\n            </Text>\n            <Flex alignItems=\"center\" mr=\"8px\">\n              <Text color=\"textSubtle\">{Number(publicIfoData.hardcap)/1000000000000000000}&nbsp;BNB</Text>\n           </Flex>\n          </Flex>\n        <StyledLinkExternal href={\"https://bscscan.com/address/\".concat(publicIfoData.ILOToken.toString())}>{t('View Contract')}</StyledLinkExternal>\n      </Flex>\n    </Container>\n  )\n}\n\nexport default Achievement\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardRibbon,\n  ExpandableButton,\n  Progress,\n  Button,\n  ChevronUpIcon,\n} from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PublicIfoData3 } from 'views/Ifos/types'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { Address } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { EnableStatus } from './types'\nimport IfoPoolCard from './IfoPoolCard'\nimport Timer from './Timer'\nimport Achievement from './Achievement'\n\n\n\ninterface IfoFoldableCardProps {\n  publicIfoData: PublicIfoData3\n}\n\nconst getRibbonComponent = (status: string, t: any) => {\n  if (status === 'cancelled') {\n    return <CardRibbon variantColor=\"textDisabled\" ribbonPosition=\"left\" text={t(status)} />\n  }\n\n  \n    return (\n      <CardRibbon\n        variantColor=\"primary\"\n        ribbonPosition=\"left\"\n        style={{ textTransform: 'uppercase' }}\n        text={`${t(status)}!`}\n      />\n    )\n  \n\n}\n\nconst StyledCard = styled(Card)`\n  max-width: 736px;\n  width: 100%;\n  margin: auto;\n  \n`\n\nconst Header = styled(CardHeader)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width:736px;\n  background-repeat: no-repeat;\n  background-position: center;\n`\n\nconst FoldableContent = styled.div<{ isActive: boolean }>`\n  display: block;\n  background: ${({ isActive, theme }) => (isActive ? theme.colors.gradients.bubblegum : theme.colors.dropdown)};\n`\n\nconst CardsWrapper = styled.div<{ singleCard: boolean }>`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 32px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 25%;\n    margin-right: 25%;\n    justify-items: ${({ singleCard }) => (singleCard ? 'center' : 'unset')};\n  }\n`\n\nconst StyledCardBody = styled(CardBody)`\n  padding: 24px 16px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding: 24px;\n  }\n`\n\nconst StyledCardFooter = styled(CardFooter)`\n  text-align: center;\n  padding: 8px;\n  background: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst IfoFoldableCard: React.FC<IfoFoldableCardProps> = ({  publicIfoData }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const ctime= Number((new Date().getTime()/1000).toFixed(0));\n  const countdownToUse = ctime<Number(publicIfoData.startPresaleTime) ? Number(publicIfoData.startPresaleTime)-ctime :  ctime<Number(publicIfoData.endPresaleTime)?ctime-Number(publicIfoData.endPresaleTime):0\n\n  const Ribbon = getRibbonComponent(countdownToUse!==0 &&Number(publicIfoData.status)===-1?'cancelled':ctime<Number(publicIfoData.startPresaleTime) &&Number(publicIfoData.status)===0?'coming soon':countdownToUse!==0 &&Number(publicIfoData.status)===0?'live':countdownToUse!==0 &&Number(publicIfoData.status)===1?\"live\":countdownToUse===0 ||Number(publicIfoData.status)===2?\"finished\":\"\", t)\n  const isActive = publicIfoData.status !== 2&& publicIfoData.status !== -1\n \n  const { toastSuccess } = useToast()\n\n\n\n  \n\n  return (\n    <StyledCard ribbon={Ribbon}>\n    <Header >\n      <img alt='mainlogo' src={publicIfoData.headerlogo}/>\n    </Header>\n      <FoldableContent  isActive={publicIfoData.status !== -1 && publicIfoData.status !== 2}>\n        {isActive && <Progress variant=\"flat\" primaryStep={100*(publicIfoData.sold/publicIfoData.softcap)} />}\n        <StyledCardBody>\n          {isActive && <Timer publicIfoData={publicIfoData} />}\n          <div style={{textAlign:\"center\"}}>\n              <h1 style={{fontSize:\"larger\"}}>{publicIfoData.name}</h1>\n              {\n              /*  publicIfoData.maxUserAmount.toString()===\"0\"?<h1>No Limit</h1>:<div><h1>Limit</h1>&nbsp;{getFullDisplayBalance(new BigNumber(publicIfoData.maxUserAmount),18,2).concat(\" BNB per User\")}</div>  */\n              }\n            </div>\n            <br/>\n            <CardsWrapper singleCard={!false}>\n          \n          <IfoPoolCard\n            publicIfoData={publicIfoData}\n          />\n        \n        \n      </CardsWrapper>\n          <Achievement publicIfoData={publicIfoData} />\n        </StyledCardBody>\n        \n      </FoldableContent>\n    </StyledCard>\n  )\n}\n\nexport default IfoFoldableCard\n","import styled from 'styled-components'\n\nconst IfoLayout = styled.div`\n  display: flex;\n  padding: 40px 0;\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n`\n\nexport default IfoLayout\n","import React, { useEffect, useState } from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { getIfoV3Contract } from 'utils/contractHelpers'\nimport { collection, doc, getDoc, getDocs, query, where } from 'firebase/firestore'\nimport { firestore } from 'firebase'\nimport { useERC20 } from 'hooks/useContract'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceAmount, getBalanceNumber, getDecimalAmount, getFullDisplayBalance } from 'utils/formatBalance'\nimport IfoFoldableCard from './components/IfoFoldableCard'\nimport IfoLayout from './components/IfoLayout'\nimport { PublicIfoData3 } from './types'\n\n\n\n\n\n\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const [loadedAddr, setloadedAddr] = useState()\n \n  const [publicIfoData, setpublicIfoData] = useState<PublicIfoData3>(null)\n \n  useEffect(()=>{\n    async function loadData() {\n      console.log(\"----------\")\n      const docRef = doc(firestore, \"live\", \"set\");\n            const docCurSet = await getDoc(docRef);\n            console.log(docRef)\n            const docRefData = doc(firestore, \"ilos\", docCurSet.data().address);\n            const docCurSetData = await getDoc(docRefData);\n    console.log(docCurSetData.data())\n    const contract = getIfoV3Contract(docCurSet.data().address);\n    const status=await contract.status.call();\n    const costPresale=await contract.costPresale.call();\n    const listingPrice=await contract.listingPrice.call();\n    const softcap=await contract.softcap.call()\n    const hardcap=await contract.hardcap.call();\n    const sold=await contract.sold.call();\n    const decimals=await contract.decimals.call();\n    const isWhitelistOn=await contract.isWhitelistOn.call();\n    const round=await contract.round.call();\n    const users=await contract.users.call();\n    const maxUserAmount=await contract.maxUserAmount.call();\n    const startPresaleTime=await contract.startPresaleTime.call();\n    const endPresaleTime=await contract.endPresaleTime.call();\n    const paused=await contract.paused.call();\n    const ILOToken =await contract.ILOToken.call();\n    console.log(\"asdjajdlka \",new BigNumber(sold),new BigNumber(decimals))\n    const data:PublicIfoData3={\n      myaddress:docCurSet.data().address,\n      status,\n      costPresale,\n      listingPrice,\n      softcap,\n      hardcap,\n      sold,\n      decimals,\n      name:docCurSetData.data().tokenName,\n      symbol:docCurSetData.data().tokenSymbol,\n      link:docCurSetData.data().projectLink,\n      logolink:docCurSetData.data().logolink,\n      headerlogo:docCurSetData.data().headerlink,\n      isWhitelistOn,\n      round,\n      users,\n      maxUserAmount,\n      startPresaleTime,\n      endPresaleTime,\n      paused,\n      ILOToken }\n    setpublicIfoData(data);\n    setloadedAddr(docCurSet.data().address);\n    }\n     loadData() \n   \n  },[publicIfoData]);\n  \n\n  if(publicIfoData&&publicIfoData.status!==-2)\n {\n  return (\n    <IfoLayout>\n      <IfoFoldableCard  publicIfoData={publicIfoData}  />\n      \n    </IfoLayout>\n  )\n }\n  return (\n    <IfoLayout/>\n  )\n \n}\n\nexport default Ifo\n","import React, { useEffect } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Route, useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem, Flex } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\n\n\n\nconst Ifos = () => {\n  const { t } = useTranslation()\n  const { path, url, isExact } = useRouteMatch()\n  \n\n\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        \n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n       \n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}