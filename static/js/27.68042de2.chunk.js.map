{"version":3,"sources":["views/Nftcrane/ViewNFTs.tsx"],"names":["StyledCard","styled","Card","FarmCardInnerContainer","Flex","div","theme","colors","cardBorder","ViewNFTs","t","useTranslation","account","useWeb3React","hist","useHistory","useState","mystate","setMystate","useEffect","a","contract","getDNFTContract","getDNFTcraneAddress","walletOfOwner","nftsids","len","length","alldata","i","tokenURI","uri","console","log","concat","substring","axios","get","headers","resp","push","isActive","justifyContent","bold","Number","data","description","style","margin","width","height","alt","src","image","onClick","toString","loadData","as","scale","color","mb","textAlign","display","flexWrap"],"mappings":"qSAkBMA,EAAaC,YAAOC,IAAPD,CAAH,qGAOVE,EAAyBF,YAAOG,IAAPH,CAAH,+GAOHA,IAAOI,IAAV,iGAEI,qBAAGC,MAAkBC,OAAOC,cA8FvCC,UAjFY,WACzB,IAAQC,EAAMC,cAAND,EACAE,EAAYC,cAAZD,QACFE,EAAKC,cACX,EAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KAyDA,OAvDAC,qBAAU,WAAI,4CACZ,4BAAAC,EAAA,yDACQC,EAAWC,YAAgBC,gBAC9BX,EAFL,yCAAAQ,EAAA,0CAAAA,EAAA,sEAIwBC,EAASG,cAAcZ,GAJ/C,OAIUa,EAJV,OAKUC,EAAID,EAAQE,OACZC,EAAQ,GANlB,IAAAR,EAAA,iBAOYS,GAPZ,iBAAAT,EAAA,sEASwBC,EAASS,SAASL,EAAQI,IATlD,cAScE,EATd,OAUQC,QAAQC,IAAI,wBAAwBC,OAAO,GAAGA,OAAOH,GAAKI,UAAU,KAV5E,SAW0BC,IAAMC,IAAI,wBAAwBH,OAAO,GAAGA,OAAOH,GAAKI,UAAU,IAAI,CACpFG,QAAS,CACL,eAAgB,sBAbhC,OAWcC,EAXd,OAgBQP,QAAQC,IAAIM,GACZX,EAAQY,KAAK,cAACxC,EAAD,CAAoByC,UAAU,EAA9B,SACT,eAACtC,EAAD,WAEA,eAAC,IAAD,CAAMuC,eAAe,gBAArB,UACI,cAAC,KAAD,sBACA,cAAC,KAAD,CAAMC,MAAI,EAAV,SAAYC,OAAOnB,EAAQI,SAE7B,uBAEA,eAAC,IAAD,CAAMa,eAAe,gBAArB,UACE,cAAC,KAAD,2BACA,cAAC,KAAD,CAAMC,MAAI,EAAV,SAAYJ,EAAKM,KAAKC,iBAExB,uBACA,qBAAKC,MAAO,CAACC,OAAO,OAAOC,MAAM,QAAQC,OAAO,QAASC,IAAI,aAAaC,IAAK,wBAAwBlB,OAAO,GAAGA,OAAOK,EAAKM,KAAKQ,OAAOlB,UAAU,MACnJ,uBACA,cAAC,IAAD,CAAMO,eAAe,SAArB,SACF,cAAC,IAAD,CAAQY,QACN,kBAAIxC,EAAK0B,KAAK,qBAAqBN,OAAOU,OAAOnB,EAAQI,IAAI0B,cAD/D,wBAjB0B1B,IAjBtC,0CAOYA,EAAE,EAPd,YAOgBA,EAAEH,GAPlB,0CAOYG,GAPZ,eAOsBA,IAPtB,uBA4CKX,EAAWU,GA5ChB,iGADY,uBAAC,WAAD,wBAgDZ4B,KACA,CAAC5C,EAAQE,IAOT,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAS2C,GAAG,KAAKC,MAAM,MAAMC,MAAM,YAAYC,GAAG,OAAlD,SACGlD,EAAE,UAEL,cAAC,IAAD,CAASgD,MAAM,KAAKC,MAAM,OAA1B,SACGjD,EAAE,uBAIP,cAAC,IAAD,CAAMqC,MAAO,CAACc,UAAU,SAASC,QAAQ,OAAOC,SAAS,QAAzD,SAEG9C","file":"static/js/27.68042de2.chunk.js","sourcesContent":["import { Button, Card, Flex, Heading, Text, useModal } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport axios from 'axios'\r\n\r\nimport BigNumber from 'bignumber.js'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useDNFTContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { getDNFTcraneAddress } from 'utils/addressHelpers'\r\nimport { getDNFTContract } from 'utils/contractHelpers'\r\nimport MintModal from './MintModal'\r\nimport Timer from './Timer'\r\n\r\nconst StyledCard = styled(Card)`\r\n  align-self: center;\r\n  display:block;\r\n  width:360px;\r\n  margin:10px;\r\n`\r\n\r\nconst FarmCardInnerContainer = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  \r\n  padding: 24px;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div`\r\n  padding: 24px;\r\n  border-top: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n  overflow: hidden;\r\n`\r\nclass NFTModal{\r\n\timage=\"\";\r\n\r\n\tdescription=\"\";\r\n\r\n\tname=\"\";\r\n\r\n\tid=\"\";\r\n}\r\n\r\nconst ViewNFTs: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const hist=useHistory();\r\n  const [mystate, setMystate] = useState<any>()\r\n\r\n  useEffect(()=>{\r\n    async function loadData(){\r\n      const contract = getDNFTContract(getDNFTcraneAddress());\r\n      if(account)\r\n      {\r\n        const nftsids=await contract.walletOfOwner(account);\r\n        const len=nftsids.length;\r\n        const alldata=[];\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            const uri=await contract.tokenURI(nftsids[i]);\r\n            console.log(\"https://ipfs.io/ipfs/\".concat(\"\".concat(uri).substring(7)))\r\n            const resp= await axios.get(\"https://ipfs.io/ipfs/\".concat(\"\".concat(uri).substring(7)),{\r\n                headers: {\r\n                    'content-type': 'application/json'\r\n                }\r\n            });\r\n            console.log(resp)\r\n            alldata.push(<StyledCard key={i} isActive={!false}>\r\n                <FarmCardInnerContainer>\r\n                  \r\n                <Flex justifyContent=\"space-between\">\r\n                    <Text>NFT Id:</Text>\r\n                    <Text bold>{Number(nftsids[i])}</Text>\r\n                  </Flex>\r\n                  <br/>\r\n                  \r\n                  <Flex justifyContent=\"space-between\">\r\n                    <Text>Description:</Text>\r\n                    <Text bold>{resp.data.description}</Text>\r\n                  </Flex>\r\n                  <br/>\r\n                  <img style={{margin:\"auto\",width:\"300px\",height:\"auto\"}} alt=\"Nft avatar\" src={\"https://ipfs.io/ipfs/\".concat(\"\".concat(resp.data.image).substring(7))}/>\r\n                  <br/>\r\n                  <Flex justifyContent=\"center\">\r\n                <Button onClick={\r\n                  ()=>hist.push('/sellNFTcrane?tid='.concat(Number(nftsids[i]).toString()))\r\n                }>View</Button>\r\n                  \r\n                </Flex>\r\n                </FarmCardInnerContainer>\r\n          \r\n                \r\n              </StyledCard>);\r\n        }\r\n         setMystate(alldata);\r\n      }\r\n    }\r\n    loadData();\r\n  },[account,hist])\r\n\r\n \r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {t('NFTs')}\r\n        </Heading>\r\n        <Heading scale=\"lg\" color=\"text\">\r\n          {t('View your NFTs')}\r\n        </Heading>\r\n        \r\n      </PageHeader>\r\n      <Page style={{textAlign:\"center\",display:\"flex\",flexWrap:\"wrap\"}}>\r\n      \r\n        {mystate}\r\n        \r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ViewNFTs\r\n"],"sourceRoot":""}